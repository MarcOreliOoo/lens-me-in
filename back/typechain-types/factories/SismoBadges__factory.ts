/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SismoBadges, SismoBadgesInterface } from "../SismoBadges";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060600160405280603f8152602001620018ca603f9139620000378162000049565b50620000433362000062565b62000197565b80516200005e906002906020840190620000b4565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000c2906200015a565b90600052602060002090601f016020900481019282620000e6576000855562000131565b82601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b5b808211156200013f576000815560010162000144565b600181811c908216806200016f57607f821691505b602082108114156200019157634e487b7160e01b600052602260045260246000fd5b50919050565b61172380620001a76000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063715018a611610071578063715018a6146101695780638da5cb5b14610171578063a22cb4651461018c578063e985e9c51461019f578063f242432a146101db578063f2fde38b146101ee57600080fd5b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c14610101578063156e29f6146101215780632eb2c2d6146101365780634e1273f414610149575b600080fd5b6100cb6100c6366004610ea5565b610201565b6040519081526020015b60405180910390f35b6100f16100ec366004610ee5565b610298565b60405190151581526020016100d5565b61011461010f366004610f09565b6102ea565b6040516100d59190610f6f565b61013461012f366004610f82565b61037e565b005b610134610144366004611101565b6103c8565b61015c6101573660046111ab565b61045f565b6040516100d591906112b1565b610134610589565b6003546040516001600160a01b0390911681526020016100d5565b61013461019a3660046112c4565b6105bf565b6100f16101ad366004611300565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346101e9366004611333565b6105ce565b6101346101fc366004611398565b610655565b60006001600160a01b0383166102725760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102c957506001600160e01b031982166303a24d0760e21b145b806102e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102f9906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610325906113b3565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b50505050509050919050565b6003546001600160a01b031633146103a85760405162461bcd60e51b8152600401610269906113ee565b6103c3838383604051806020016040528060008152506106f0565b505050565b6001600160a01b0385163314806103e457506103e485336101ad565b61044b5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610269565b61045885858585856107fa565b5050505050565b606081518351146104c45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610269565b6000835167ffffffffffffffff8111156104e0576104e0610fb5565b604051908082528060200260200182016040528015610509578160200160208202803683370190505b50905060005b84518110156105815761055485828151811061052d5761052d611423565b602002602001015185838151811061054757610547611423565b6020026020010151610201565b82828151811061056657610566611423565b602090810291909101015261057a8161144f565b905061050f565b509392505050565b6003546001600160a01b031633146105b35760405162461bcd60e51b8152600401610269906113ee565b6105bd60006109d7565b565b6105ca338383610a29565b5050565b6001600160a01b0385163314806105ea57506105ea85336101ad565b6106485760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610269565b6104588585858585610b0a565b6003546001600160a01b0316331461067f5760405162461bcd60e51b8152600401610269906113ee565b6001600160a01b0381166106e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610269565b6106ed816109d7565b50565b6001600160a01b0384166107505760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610269565b3361076a8160008761076188610c27565b61045888610c27565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061079a90849061146a565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461045881600087878787610c72565b815183511461085c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610269565b6001600160a01b0384166108825760405162461bcd60e51b815260040161026990611482565b3360005b84518110156109695760008582815181106108a3576108a3611423565b6020026020010151905060008583815181106108c1576108c1611423565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109115760405162461bcd60e51b8152600401610269906114c7565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061094e90849061146a565b92505081905550505050806109629061144f565b9050610886565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109b9929190611511565b60405180910390a46109cf818787878787610dce565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610a9d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610269565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610b305760405162461bcd60e51b815260040161026990611482565b33610b4081878761076188610c27565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610b815760405162461bcd60e51b8152600401610269906114c7565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610bbe90849061146a565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c1e828888888888610c72565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c6157610c61611423565b602090810291909101015292915050565b6001600160a01b0384163b156109cf5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610cb6908990899088908890889060040161153f565b6020604051808303816000875af1925050508015610cf1575060408051601f3d908101601f19168201909252610cee91810190611584565b60015b610d9e57610cfd6115a1565b806308c379a01415610d375750610d126115bd565b80610d1d5750610d39565b8060405162461bcd60e51b81526004016102699190610f6f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610269565b6001600160e01b0319811663f23a6e6160e01b14610c1e5760405162461bcd60e51b815260040161026990611647565b6001600160a01b0384163b156109cf5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610e12908990899088908890889060040161168f565b6020604051808303816000875af1925050508015610e4d575060408051601f3d908101601f19168201909252610e4a91810190611584565b60015b610e5957610cfd6115a1565b6001600160e01b0319811663bc197c8160e01b14610c1e5760405162461bcd60e51b815260040161026990611647565b80356001600160a01b0381168114610ea057600080fd5b919050565b60008060408385031215610eb857600080fd5b610ec183610e89565b946020939093013593505050565b6001600160e01b0319811681146106ed57600080fd5b600060208284031215610ef757600080fd5b8135610f0281610ecf565b9392505050565b600060208284031215610f1b57600080fd5b5035919050565b6000815180845260005b81811015610f4857602081850181015186830182015201610f2c565b81811115610f5a576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610f026020830184610f22565b600080600060608486031215610f9757600080fd5b610fa084610e89565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610ff157610ff1610fb5565b6040525050565b600067ffffffffffffffff82111561101257611012610fb5565b5060051b60200190565b600082601f83011261102d57600080fd5b8135602061103a82610ff8565b6040516110478282610fcb565b83815260059390931b850182019282810191508684111561106757600080fd5b8286015b84811015611082578035835291830191830161106b565b509695505050505050565b600082601f83011261109e57600080fd5b813567ffffffffffffffff8111156110b8576110b8610fb5565b6040516110cf601f8301601f191660200182610fcb565b8181528460208386010111156110e457600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561111957600080fd5b61112286610e89565b945061113060208701610e89565b9350604086013567ffffffffffffffff8082111561114d57600080fd5b61115989838a0161101c565b9450606088013591508082111561116f57600080fd5b61117b89838a0161101c565b9350608088013591508082111561119157600080fd5b5061119e8882890161108d565b9150509295509295909350565b600080604083850312156111be57600080fd5b823567ffffffffffffffff808211156111d657600080fd5b818501915085601f8301126111ea57600080fd5b813560206111f782610ff8565b6040516112048282610fcb565b83815260059390931b850182019282810191508984111561122457600080fd5b948201945b838610156112495761123a86610e89565b82529482019490820190611229565b9650508601359250508082111561125f57600080fd5b5061126c8582860161101c565b9150509250929050565b600081518084526020808501945080840160005b838110156112a65781518752958201959082019060010161128a565b509495945050505050565b602081526000610f026020830184611276565b600080604083850312156112d757600080fd5b6112e083610e89565b9150602083013580151581146112f557600080fd5b809150509250929050565b6000806040838503121561131357600080fd5b61131c83610e89565b915061132a60208401610e89565b90509250929050565b600080600080600060a0868803121561134b57600080fd5b61135486610e89565b945061136260208701610e89565b93506040860135925060608601359150608086013567ffffffffffffffff81111561138c57600080fd5b61119e8882890161108d565b6000602082840312156113aa57600080fd5b610f0282610e89565b600181811c908216806113c757607f821691505b602082108114156113e857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561146357611463611439565b5060010190565b6000821982111561147d5761147d611439565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006115246040830185611276565b82810360208401526115368185611276565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061157990830184610f22565b979650505050505050565b60006020828403121561159657600080fd5b8151610f0281610ecf565b600060033d11156115ba5760046000803e5060005160e01c5b90565b600060443d10156115cb5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156115fb57505050505090565b82850191508151818111156116135750505050505090565b843d870101602082850101111561162d5750505050505090565b61163c60208286010187610fcb565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906116bb90830186611276565b82810360608401526116cd8186611276565b905082810360808401526116e18185610f22565b9897505050505050505056fea26469706673582212205866c771cf415348583429af369c421374e1adfc20300d1799c56c286a4ee9f364736f6c634300080a0033697066733a2f2f516d5344595a41566e5966617345434238346d6e41594b61584a517953424674365936316d554443674b5766324e2f7b69647d2e6a736f6e";

type SismoBadgesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SismoBadgesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SismoBadges__factory extends ContractFactory {
  constructor(...args: SismoBadgesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SismoBadges> {
    return super.deploy(overrides || {}) as Promise<SismoBadges>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SismoBadges {
    return super.attach(address) as SismoBadges;
  }
  connect(signer: Signer): SismoBadges__factory {
    return super.connect(signer) as SismoBadges__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SismoBadgesInterface {
    return new utils.Interface(_abi) as SismoBadgesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SismoBadges {
    return new Contract(address, _abi, signerOrProvider) as SismoBadges;
  }
}
